<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report.xsd" name="spoon.reflect.visitor.CtInheritanceScannerTest" time="0.637" tests="84" errors="0" skipped="0" failures="0">
  <properties>
    <property name="awt.toolkit" value="sun.awt.X11.XToolkit"/>
    <property name="java.specification.version" value="11"/>
    <property name="sun.cpu.isalist" value=""/>
    <property name="sun.jnu.encoding" value="UTF-8"/>
    <property name="java.class.path" value="/home/travis/.m2/repository/org/apache/maven/surefire/surefire-booter/2.21.0/surefire-booter-2.21.0.jar:/home/travis/.m2/repository/org/apache/maven/surefire/surefire-api/2.21.0/surefire-api-2.21.0.jar:/home/travis/.m2/repository/org/apache/maven/surefire/surefire-logger-api/2.21.0/surefire-logger-api-2.21.0.jar:/home/travis/build/SpoonLabs/spoon-ci-external/spoon/target/test-classes:/home/travis/build/SpoonLabs/spoon-ci-external/spoon/target/classes:/home/travis/.m2/repository/org/eclipse/jdt/org.eclipse.jdt.core/3.16.0/org.eclipse.jdt.core-3.16.0.jar:/home/travis/.m2/repository/com/github/stefanbirkner/system-rules/1.9.0/system-rules-1.9.0.jar:/home/travis/.m2/repository/junit/junit/4.11-beta-1/junit-4.11-beta-1.jar:/home/travis/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/travis/.m2/repository/org/mockito/mockito-core/2.23.4/mockito-core-2.23.4.jar:/home/travis/.m2/repository/net/bytebuddy/byte-buddy/1.9.3/byte-buddy-1.9.3.jar:/home/travis/.m2/repository/net/bytebuddy/byte-buddy-agent/1.9.3/byte-buddy-agent-1.9.3.jar:/home/travis/.m2/repository/org/objenesis/objenesis/2.6/objenesis-2.6.jar:/home/travis/.m2/repository/com/martiansoftware/jsap/2.1/jsap-2.1.jar:/home/travis/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/home/travis/.m2/repository/commons-io/commons-io/2.6/commons-io-2.6.jar:/home/travis/.m2/repository/org/apache/maven/maven-model/3.5.0/maven-model-3.5.0.jar:/home/travis/.m2/repository/org/codehaus/plexus/plexus-utils/3.0.24/plexus-utils-3.0.24.jar:/home/travis/.m2/repository/org/apache/commons/commons-lang3/3.8.1/commons-lang3-3.8.1.jar:/home/travis/.m2/repository/org/tukaani/xz/1.8/xz-1.8.jar:/home/travis/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.9.10/jackson-databind-2.9.10.jar:/home/travis/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.9.10/jackson-annotations-2.9.10.jar:/home/travis/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.9.10/jackson-core-2.9.10.jar:/home/travis/.m2/repository/org/apache/commons/commons-compress/1.19/commons-compress-1.19.jar:/home/travis/.m2/repository/com/google/guava/guava/18.0/guava-18.0.jar:/home/travis/.m2/repository/com/mysema/querydsl/querydsl-core/3.6.9/querydsl-core-3.6.9.jar:/home/travis/.m2/repository/org/apache/maven/shared/maven-invoker/3.0.1/maven-invoker-3.0.1.jar:/home/travis/.m2/repository/org/apache/maven/shared/maven-shared-utils/3.2.1/maven-shared-utils-3.2.1.jar:/home/travis/.m2/repository/org/codehaus/plexus/plexus-component-annotations/1.7.1/plexus-component-annotations-1.7.1.jar:/home/travis/.m2/repository/org/junit/vintage/junit-vintage-engine/5.4.2/junit-vintage-engine-5.4.2.jar:/home/travis/.m2/repository/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar:/home/travis/.m2/repository/org/junit/platform/junit-platform-engine/1.4.2/junit-platform-engine-1.4.2.jar:/home/travis/.m2/repository/org/opentest4j/opentest4j/1.1.1/opentest4j-1.1.1.jar:/home/travis/.m2/repository/org/junit/platform/junit-platform-commons/1.4.2/junit-platform-commons-1.4.2.jar:/home/travis/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.4.2/junit-jupiter-engine-5.4.2.jar:/home/travis/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.4.2/junit-jupiter-api-5.4.2.jar:/home/travis/.m2/repository/org/apache/maven/surefire/surefire-junit4/2.21.0/surefire-junit4-2.21.0.jar"/>
    <property name="java.vm.vendor" value="Oracle Corporation"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="java.vendor.url" value="http://java.oracle.com/"/>
    <property name="user.timezone" value=""/>
    <property name="java.vm.specification.version" value="11"/>
    <property name="os.name" value="Linux"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="user.country" value="US"/>
    <property name="sun.boot.library.path" value="/usr/local/lib/jvm/openjdk11/lib"/>
    <property name="sun.java.command" value="org.apache.maven.surefire.booter.ForkedBooter /home/travis/build/SpoonLabs/spoon-ci-external/spoon/target/surefire 2019-12-08T15-53-15_026-jvmRun1 surefire9697865212547575656tmp surefire_07360911556418238733tmp"/>
    <property name="jdk.debug" value="release"/>
    <property name="surefire.test.class.path" value="/home/travis/build/SpoonLabs/spoon-ci-external/spoon/target/test-classes:/home/travis/build/SpoonLabs/spoon-ci-external/spoon/target/classes:/home/travis/.m2/repository/org/eclipse/jdt/org.eclipse.jdt.core/3.16.0/org.eclipse.jdt.core-3.16.0.jar:/home/travis/.m2/repository/com/github/stefanbirkner/system-rules/1.9.0/system-rules-1.9.0.jar:/home/travis/.m2/repository/junit/junit/4.11-beta-1/junit-4.11-beta-1.jar:/home/travis/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/travis/.m2/repository/org/mockito/mockito-core/2.23.4/mockito-core-2.23.4.jar:/home/travis/.m2/repository/net/bytebuddy/byte-buddy/1.9.3/byte-buddy-1.9.3.jar:/home/travis/.m2/repository/net/bytebuddy/byte-buddy-agent/1.9.3/byte-buddy-agent-1.9.3.jar:/home/travis/.m2/repository/org/objenesis/objenesis/2.6/objenesis-2.6.jar:/home/travis/.m2/repository/com/martiansoftware/jsap/2.1/jsap-2.1.jar:/home/travis/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/home/travis/.m2/repository/commons-io/commons-io/2.6/commons-io-2.6.jar:/home/travis/.m2/repository/org/apache/maven/maven-model/3.5.0/maven-model-3.5.0.jar:/home/travis/.m2/repository/org/codehaus/plexus/plexus-utils/3.0.24/plexus-utils-3.0.24.jar:/home/travis/.m2/repository/org/apache/commons/commons-lang3/3.8.1/commons-lang3-3.8.1.jar:/home/travis/.m2/repository/org/tukaani/xz/1.8/xz-1.8.jar:/home/travis/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.9.10/jackson-databind-2.9.10.jar:/home/travis/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.9.10/jackson-annotations-2.9.10.jar:/home/travis/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.9.10/jackson-core-2.9.10.jar:/home/travis/.m2/repository/org/apache/commons/commons-compress/1.19/commons-compress-1.19.jar:/home/travis/.m2/repository/com/google/guava/guava/18.0/guava-18.0.jar:/home/travis/.m2/repository/com/mysema/querydsl/querydsl-core/3.6.9/querydsl-core-3.6.9.jar:/home/travis/.m2/repository/org/apache/maven/shared/maven-invoker/3.0.1/maven-invoker-3.0.1.jar:/home/travis/.m2/repository/org/apache/maven/shared/maven-shared-utils/3.2.1/maven-shared-utils-3.2.1.jar:/home/travis/.m2/repository/org/codehaus/plexus/plexus-component-annotations/1.7.1/plexus-component-annotations-1.7.1.jar:/home/travis/.m2/repository/org/junit/vintage/junit-vintage-engine/5.4.2/junit-vintage-engine-5.4.2.jar:/home/travis/.m2/repository/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar:/home/travis/.m2/repository/org/junit/platform/junit-platform-engine/1.4.2/junit-platform-engine-1.4.2.jar:/home/travis/.m2/repository/org/opentest4j/opentest4j/1.1.1/opentest4j-1.1.1.jar:/home/travis/.m2/repository/org/junit/platform/junit-platform-commons/1.4.2/junit-platform-commons-1.4.2.jar:/home/travis/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.4.2/junit-jupiter-engine-5.4.2.jar:/home/travis/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.4.2/junit-jupiter-api-5.4.2.jar:"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="/home/travis"/>
    <property name="user.language" value="en"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.version.date" value="2019-01-15"/>
    <property name="java.home" value="/usr/local/lib/jvm/openjdk11"/>
    <property name="file.separator" value="/"/>
    <property name="basedir" value="/home/travis/build/SpoonLabs/spoon-ci-external/spoon"/>
    <property name="java.vm.compressedOopsMode" value="32-bit"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="java.awt.graphicsenv" value="sun.awt.X11GraphicsEnvironment"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="java.runtime.version" value="11.0.2+9"/>
    <property name="user.name" value="travis"/>
    <property name="path.separator" value=":"/>
    <property name="os.version" value="4.15.0-1037-gcp"/>
    <property name="java.runtime.name" value="OpenJDK Runtime Environment"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/>
    <property name="java.vendor.version" value="18.9"/>
    <property name="localRepository" value="/home/travis/.m2/repository"/>
    <property name="java.vendor.url.bug" value="http://bugreport.java.com/bugreport/"/>
    <property name="java.io.tmpdir" value="/tmp"/>
    <property name="java.version" value="11.0.2"/>
    <property name="user.dir" value="/home/travis/build/SpoonLabs/spoon-ci-external/spoon"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="java.awt.printerjob" value="sun.print.PSPrinterJob"/>
    <property name="sun.os.patch.level" value="unknown"/>
    <property name="java.library.path" value="/usr/java/packages/lib:/usr/lib64:/lib64:/lib:/usr/lib"/>
    <property name="java.vendor" value="Oracle Corporation"/>
    <property name="java.vm.info" value="mixed mode"/>
    <property name="java.vm.version" value="11.0.2+9"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="java.class.version" value="55.0"/>
  </properties>
  <testcase name="testCtInheritanceScanner[interface spoon.reflect.code.CtCodeSnippetStatement]" classname="spoon.reflect.visitor.CtInheritanceScannerTest" time="0.349"/>
  <testcase name="testCtInheritanceScanner[interface spoon.reflect.declaration.CtClass]" classname="spoon.reflect.visitor.CtInheritanceScannerTest" time="0.015"/>
  <testcase name="testCtInheritanceScanner[interface spoon.reflect.declaration.CtImport]" classname="spoon.reflect.visitor.CtInheritanceScannerTest" time="0.003"/>
  <testcase name="testCtInheritanceScanner[interface spoon.reflect.declaration.CtImport]" classname="spoon.reflect.visitor.CtInheritanceScannerTest" time="0.002"/>
  <testcase name="testCtInheritanceScanner[interface spoon.reflect.reference.CtFieldReference]" classname="spoon.reflect.visitor.CtInheritanceScannerTest" time="0.003"/>
  <testcase name="testCtInheritanceScanner[interface spoon.reflect.declaration.CtAnnotation]" classname="spoon.reflect.visitor.CtInheritanceScannerTest" time="0.001"/>
  <testcase name="testCtInheritanceScanner[interface spoon.reflect.declaration.CtAnnotationType]" classname="spoon.reflect.visitor.CtInheritanceScannerTest" time="0.003"/>
  <testcase name="testCtInheritanceScanner[interface spoon.reflect.declaration.CtAnonymousExecutable]" classname="spoon.reflect.visitor.CtInheritanceScannerTest" time="0.003"/>
  <testcase name="testCtInheritanceScanner[interface spoon.reflect.code.CtArrayRead]" classname="spoon.reflect.visitor.CtInheritanceScannerTest" time="0.002"/>
  <testcase name="testCtInheritanceScanner[interface spoon.reflect.code.CtArrayWrite]" classname="spoon.reflect.visitor.CtInheritanceScannerTest" time="0.003"/>
  <testcase name="testCtInheritanceScanner[interface spoon.reflect.reference.CtArrayTypeReference]" classname="spoon.reflect.visitor.CtInheritanceScannerTest" time="0.003"/>
  <testcase name="testCtInheritanceScanner[interface spoon.reflect.code.CtAssert]" classname="spoon.reflect.visitor.CtInheritanceScannerTest" time="0.002"/>
  <testcase name="testCtInheritanceScanner[interface spoon.reflect.code.CtAssignment]" classname="spoon.reflect.visitor.CtInheritanceScannerTest" time="0.004"/>
  <testcase name="testCtInheritanceScanner[interface spoon.reflect.code.CtBinaryOperator]" classname="spoon.reflect.visitor.CtInheritanceScannerTest" time="0.002"/>
  <testcase name="testCtInheritanceScanner[interface spoon.reflect.code.CtBlock]" classname="spoon.reflect.visitor.CtInheritanceScannerTest" time="0.002"/>
  <testcase name="testCtInheritanceScanner[interface spoon.reflect.code.CtBreak]" classname="spoon.reflect.visitor.CtInheritanceScannerTest" time="0.005"/>
  <testcase name="testCtInheritanceScanner[interface spoon.reflect.code.CtCase]" classname="spoon.reflect.visitor.CtInheritanceScannerTest" time="0.001"/>
  <testcase name="testCtInheritanceScanner[interface spoon.reflect.code.CtCatch]" classname="spoon.reflect.visitor.CtInheritanceScannerTest" time="0.001"/>
  <testcase name="testCtInheritanceScanner[interface spoon.reflect.declaration.CtTypeParameter]" classname="spoon.reflect.visitor.CtInheritanceScannerTest" time="0.002"/>
  <testcase name="testCtInheritanceScanner[interface spoon.reflect.code.CtConditional]" classname="spoon.reflect.visitor.CtInheritanceScannerTest" time="0.001"/>
  <testcase name="testCtInheritanceScanner[interface spoon.reflect.declaration.CtConstructor]" classname="spoon.reflect.visitor.CtInheritanceScannerTest" time="0.007"/>
  <testcase name="testCtInheritanceScanner[interface spoon.reflect.declaration.CtConstructor]" classname="spoon.reflect.visitor.CtInheritanceScannerTest" time="0.003"/>
  <testcase name="testCtInheritanceScanner[interface spoon.reflect.code.CtContinue]" classname="spoon.reflect.visitor.CtInheritanceScannerTest" time="0.002"/>
  <testcase name="testCtInheritanceScanner[interface spoon.reflect.code.CtDo]" classname="spoon.reflect.visitor.CtInheritanceScannerTest" time="0.002"/>
  <testcase name="testCtInheritanceScanner[interface spoon.reflect.declaration.CtEnum]" classname="spoon.reflect.visitor.CtInheritanceScannerTest" time="0.004"/>
  <testcase name="testCtInheritanceScanner[interface spoon.reflect.reference.CtExecutableReference]" classname="spoon.reflect.visitor.CtInheritanceScannerTest" time="0.003"/>
  <testcase name="testCtInheritanceScanner[interface spoon.reflect.declaration.CtField]" classname="spoon.reflect.visitor.CtInheritanceScannerTest" time="0.003"/>
  <testcase name="testCtInheritanceScanner[interface spoon.reflect.declaration.CtEnumValue]" classname="spoon.reflect.visitor.CtInheritanceScannerTest" time="0.005"/>
  <testcase name="testCtInheritanceScanner[interface spoon.reflect.code.CtFieldRead]" classname="spoon.reflect.visitor.CtInheritanceScannerTest" time="0.004"/>
  <testcase name="testCtInheritanceScanner[interface spoon.reflect.code.CtFieldWrite]" classname="spoon.reflect.visitor.CtInheritanceScannerTest" time="0.002"/>
  <testcase name="testCtInheritanceScanner[interface spoon.reflect.code.CtThisAccess]" classname="spoon.reflect.visitor.CtInheritanceScannerTest" time="0.001"/>
  <testcase name="testCtInheritanceScanner[interface spoon.reflect.code.CtSuperAccess]" classname="spoon.reflect.visitor.CtInheritanceScannerTest" time="0.004"/>
  <testcase name="testCtInheritanceScanner[interface spoon.reflect.code.CtFor]" classname="spoon.reflect.visitor.CtInheritanceScannerTest" time="0.005"/>
  <testcase name="testCtInheritanceScanner[interface spoon.reflect.code.CtForEach]" classname="spoon.reflect.visitor.CtInheritanceScannerTest" time="0.002"/>
  <testcase name="testCtInheritanceScanner[interface spoon.reflect.code.CtIf]" classname="spoon.reflect.visitor.CtInheritanceScannerTest" time="0.001"/>
  <testcase name="testCtInheritanceScanner[interface spoon.reflect.declaration.CtInterface]" classname="spoon.reflect.visitor.CtInheritanceScannerTest" time="0.002"/>
  <testcase name="testCtInheritanceScanner[interface spoon.reflect.code.CtInvocation]" classname="spoon.reflect.visitor.CtInheritanceScannerTest" time="0.002"/>
  <testcase name="testCtInheritanceScanner[interface spoon.reflect.code.CtLiteral]" classname="spoon.reflect.visitor.CtInheritanceScannerTest" time="0.001"/>
  <testcase name="testCtInheritanceScanner[interface spoon.reflect.code.CtLocalVariable]" classname="spoon.reflect.visitor.CtInheritanceScannerTest" time="0.001"/>
  <testcase name="testCtInheritanceScanner[interface spoon.reflect.reference.CtLocalVariableReference]" classname="spoon.reflect.visitor.CtInheritanceScannerTest" time="0.001"/>
  <testcase name="testCtInheritanceScanner[interface spoon.reflect.code.CtCatchVariable]" classname="spoon.reflect.visitor.CtInheritanceScannerTest" time="0.002"/>
  <testcase name="testCtInheritanceScanner[interface spoon.reflect.reference.CtCatchVariableReference]" classname="spoon.reflect.visitor.CtInheritanceScannerTest" time="0.001"/>
  <testcase name="testCtInheritanceScanner[interface spoon.reflect.declaration.CtMethod]" classname="spoon.reflect.visitor.CtInheritanceScannerTest" time="0.004"/>
  <testcase name="testCtInheritanceScanner[interface spoon.reflect.declaration.CtAnnotationMethod]" classname="spoon.reflect.visitor.CtInheritanceScannerTest" time="0.004"/>
  <testcase name="testCtInheritanceScanner[interface spoon.reflect.code.CtNewArray]" classname="spoon.reflect.visitor.CtInheritanceScannerTest" time="0.001"/>
  <testcase name="testCtInheritanceScanner[interface spoon.reflect.code.CtConstructorCall]" classname="spoon.reflect.visitor.CtInheritanceScannerTest" time="0.002"/>
  <testcase name="testCtInheritanceScanner[interface spoon.reflect.code.CtNewClass]" classname="spoon.reflect.visitor.CtInheritanceScannerTest" time="0.002"/>
  <testcase name="testCtInheritanceScanner[interface spoon.reflect.code.CtLambda]" classname="spoon.reflect.visitor.CtInheritanceScannerTest" time="0.002"/>
  <testcase name="testCtInheritanceScanner[interface spoon.reflect.code.CtExecutableReferenceExpression]" classname="spoon.reflect.visitor.CtInheritanceScannerTest" time="0.004"/>
  <testcase name="testCtInheritanceScanner[interface spoon.reflect.code.CtOperatorAssignment]" classname="spoon.reflect.visitor.CtInheritanceScannerTest" time="0.003"/>
  <testcase name="testCtInheritanceScanner[interface spoon.reflect.declaration.CtPackage]" classname="spoon.reflect.visitor.CtInheritanceScannerTest" time="0.001"/>
  <testcase name="testCtInheritanceScanner[interface spoon.reflect.reference.CtPackageReference]" classname="spoon.reflect.visitor.CtInheritanceScannerTest" time="0"/>
  <testcase name="testCtInheritanceScanner[interface spoon.reflect.declaration.CtParameter]" classname="spoon.reflect.visitor.CtInheritanceScannerTest" time="0.001"/>
  <testcase name="testCtInheritanceScanner[interface spoon.reflect.reference.CtParameterReference]" classname="spoon.reflect.visitor.CtInheritanceScannerTest" time="0.001"/>
  <testcase name="testCtInheritanceScanner[interface spoon.reflect.code.CtReturn]" classname="spoon.reflect.visitor.CtInheritanceScannerTest" time="0.002"/>
  <testcase name="testCtInheritanceScanner[interface spoon.reflect.code.CtStatementList]" classname="spoon.reflect.visitor.CtInheritanceScannerTest" time="0.001"/>
  <testcase name="testCtInheritanceScanner[interface spoon.reflect.code.CtSwitch]" classname="spoon.reflect.visitor.CtInheritanceScannerTest" time="0.001"/>
  <testcase name="testCtInheritanceScanner[interface spoon.reflect.code.CtSynchronized]" classname="spoon.reflect.visitor.CtInheritanceScannerTest" time="0.001"/>
  <testcase name="testCtInheritanceScanner[interface spoon.reflect.code.CtThrow]" classname="spoon.reflect.visitor.CtInheritanceScannerTest" time="0.002"/>
  <testcase name="testCtInheritanceScanner[interface spoon.reflect.code.CtTry]" classname="spoon.reflect.visitor.CtInheritanceScannerTest" time="0.002"/>
  <testcase name="testCtInheritanceScanner[interface spoon.reflect.code.CtTryWithResource]" classname="spoon.reflect.visitor.CtInheritanceScannerTest" time="0.001"/>
  <testcase name="testCtInheritanceScanner[interface spoon.reflect.reference.CtWildcardReference]" classname="spoon.reflect.visitor.CtInheritanceScannerTest" time="0.003"/>
  <testcase name="testCtInheritanceScanner[interface spoon.reflect.reference.CtIntersectionTypeReference]" classname="spoon.reflect.visitor.CtInheritanceScannerTest" time="0.002"/>
  <testcase name="testCtInheritanceScanner[interface spoon.reflect.reference.CtTypeReference]" classname="spoon.reflect.visitor.CtInheritanceScannerTest" time="0.001"/>
  <testcase name="testCtInheritanceScanner[interface spoon.reflect.code.CtTypeAccess]" classname="spoon.reflect.visitor.CtInheritanceScannerTest" time="0.003"/>
  <testcase name="testCtInheritanceScanner[interface spoon.reflect.code.CtUnaryOperator]" classname="spoon.reflect.visitor.CtInheritanceScannerTest" time="0.002"/>
  <testcase name="testCtInheritanceScanner[interface spoon.reflect.code.CtVariableRead]" classname="spoon.reflect.visitor.CtInheritanceScannerTest" time="0.003"/>
  <testcase name="testCtInheritanceScanner[interface spoon.reflect.code.CtVariableWrite]" classname="spoon.reflect.visitor.CtInheritanceScannerTest" time="0.001"/>
  <testcase name="testCtInheritanceScanner[interface spoon.reflect.code.CtWhile]" classname="spoon.reflect.visitor.CtInheritanceScannerTest" time="0.004"/>
  <testcase name="testCtInheritanceScanner[interface spoon.reflect.code.CtCodeSnippetExpression]" classname="spoon.reflect.visitor.CtInheritanceScannerTest" time="0.001"/>
  <testcase name="testCtInheritanceScanner[interface spoon.reflect.code.CtComment]" classname="spoon.reflect.visitor.CtInheritanceScannerTest" time="0.001"/>
  <testcase name="testCtInheritanceScanner[interface spoon.reflect.code.CtJavaDoc]" classname="spoon.reflect.visitor.CtInheritanceScannerTest" time="0.001"/>
  <testcase name="testCtInheritanceScanner[interface spoon.reflect.code.CtJavaDocTag]" classname="spoon.reflect.visitor.CtInheritanceScannerTest" time="0.001"/>
  <testcase name="testCtInheritanceScanner[interface spoon.reflect.declaration.CtPackageDeclaration]" classname="spoon.reflect.visitor.CtInheritanceScannerTest" time="0.001"/>
  <testcase name="testCtInheritanceScanner[interface spoon.reflect.code.CtAnnotationFieldAccess]" classname="spoon.reflect.visitor.CtInheritanceScannerTest" time="0.001"/>
  <testcase name="testCtInheritanceScanner[interface spoon.reflect.reference.CtUnboundVariableReference]" classname="spoon.reflect.visitor.CtInheritanceScannerTest" time="0"/>
  <testcase name="testCtInheritanceScanner[interface spoon.reflect.declaration.CtModule]" classname="spoon.reflect.visitor.CtInheritanceScannerTest" time="0"/>
  <testcase name="testCtInheritanceScanner[interface spoon.reflect.reference.CtModuleReference]" classname="spoon.reflect.visitor.CtInheritanceScannerTest" time="0.001"/>
  <testcase name="testCtInheritanceScanner[interface spoon.reflect.declaration.CtModuleRequirement]" classname="spoon.reflect.visitor.CtInheritanceScannerTest" time="0.001"/>
  <testcase name="testCtInheritanceScanner[interface spoon.reflect.declaration.CtPackageExport]" classname="spoon.reflect.visitor.CtInheritanceScannerTest" time="0.001"/>
  <testcase name="testCtInheritanceScanner[interface spoon.reflect.declaration.CtProvidedService]" classname="spoon.reflect.visitor.CtInheritanceScannerTest" time="0.001"/>
  <testcase name="testCtInheritanceScanner[interface spoon.reflect.declaration.CtUsedService]" classname="spoon.reflect.visitor.CtInheritanceScannerTest" time="0.001"/>
  <testcase name="testCtInheritanceScanner[interface spoon.reflect.reference.CtTypeMemberWildcardImportReference]" classname="spoon.reflect.visitor.CtInheritanceScannerTest" time="0.001"/>
  <testcase name="testCtInheritanceScanner[interface spoon.reflect.reference.CtTypeParameterReference]" classname="spoon.reflect.visitor.CtInheritanceScannerTest" time="0.012"/>
</testsuite>